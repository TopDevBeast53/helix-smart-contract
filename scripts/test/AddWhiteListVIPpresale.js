/**
 * @dev Add LP token to MasterChef
 * 
 * Run on bsc-testnet: 
 *      npx hardhat run scripts/AddWhiteListVIPpresale.js --network testnetBSC
 */

const { ethers, network } = require(`hardhat`);
const contracts = require("./constants/contracts")
const { getChainId } = require("../shared/utilities")
const initials = require("./constants/initials");
require("dotenv").config();

const addresses = ['0x773658bcF21ff10ff8AB0ff286f32280d6012302', '0x2DeA093A790eE4B39CFD8d0987543e6A0bD3A793', '0x7Fe28c576Bd821d495a08e244d11Cf33069b17C0', '0x135d022eAD508d642e6ADEca8AC709c32995Ffa4', '0x10cD63cBEB8cB30f1B9329cb7229f5c7Fe54D9c0', '0x48fc37b35990AA46DAd678Cf738c3c4514c12750', '0x121EC79e9Eb2540eB211797fa09052364A7d28C5', '0x221e438E4A8Fc6569457bAe62CbCcDb8b5b02a93', '0xE1836BC9EE4b4441e9E6824F70D9fa70E3Bbe84a', '0xF5D6DFED3a254963c5d476C89249e5E3986478ea', '0xEFF8Aac11F173a35F9121F4c97B0F9D2293b2503', '0x228Bf122f0A985C2c9Bc63385F6fc9e3731894f1', '0xAAb2eACC08690BDbE4A11F43498cA0b9D37D16c2', '0x9dA577bE5727D7FeB03e3115DDa2e6893d301884', '0xD896128ca2Efbb7c60d5d652693bDbe875064A95', '0x9de2b52bF7a17593B75450aEFCE337A2B6434444', '0x44415C6431DbEDb2e71B08F7555cdfc588E7a151', '0x353E07F362E8315a3B4F00d67C67d5B489FA7880', '0xec9235f9dd3A1221E475cb3E4520ac2Ae2ec08eE', '0xD8582028d2d97a463B2ac9AED9152972Ce34076E', '0xED6e29b74f23886198222CdD11b550A15253eE91', '0xA64f0d632C005C0E76276a4e4013b117F3934e61', '0x4968d5d42754e1C47d870BEBE0D6B408A46cCC7C', '0x14720EE0555Ac02aac7cD59a0D72Caf56025ca97', '0xCC8b0d940F3C450593b06e92e74C96b7908765f1', '0x4a20B67AC0519CF1677Da336eB300FA4132Af88e', '0x1572Ca9ef546072a0759c80428775656c379B550', '0x8763E8C8faA98dC78f9Cc797570410976f178933', '0x4b1924114F99113336190DA281F12c01453F0165', '0x5c0FA42f598c43A924Ba75E7593aE22f99ADf87D', '0xB98bf14c218008Ab9D0bf2b718Ac4c193Dc31ccC', '0x6EF869955150964E89E3bF2698f1E733b5070c31', '0xd50c6DE81DEdAbb67a92eE98ab342AF1032F324a', '0xe9403976914fAc0a9d289bB3ae7021e9C7EEEf08', '0x36F3063183ca5345aFD6398178766f1967f682A0', '0x2f2c6b2aA6980228721D9402A5953402fb38B164', '0x1bbDa612525d0361a0C46fc001830a6E0dDb7eAa', '0xEC733cEE2C613b3BE783c712d8Fd8831eE53691C', '0xe0d58385e77f5DB559D84E555459305E5369C89B', '0xD0A6c60Fc9715B5D30f8674337b202693cC9e2fE', '0x463aF3092D5E7A3150a69d3c80BcE6428C384d4e', '0xb9801179368231ca11B1f93acb5395c2bcD31998', '0x96266f6E1056FcFf058444777f7b8804219301d4', '0x7B4920c43Fba5b53EeBCf439E5bC5a5fE98a958C', '0x9cBbaB871905Fac3127f439080b085B5484AD1d0', '0x2112C519dcdC58b1bDa919F6f728c19a838Dd372', '0xe3D3469f983f2E5E7c46D730A4455206089beA7c', '0xBaC9ceBDC6C09d02C0aa989178724A6A465c420e', '0x557917ca0A0edB3Ed9957E29b4777a3fd4BB507B', '0x63e7A8b411e05161125b1C54269c3D04A1e21f64', '0xC4820b7992c47f84D2fb0B945C0a6638325E996A', '0x6F760f6A4A7dfbad86C0f568b6516f9b2A8FAcca', '0x6708dcC6D0Ae5f0EBf041bB6bD554e7B286CB3b3', '0x1E6b290e5eaCcF5a293Cf803b96540d73A8188E4', '0x2fa7DCBdb8F08038E9EA666dD1678D66a90F8d50', '0x1171D5C48912686dcF3992dE96593D502e24D957', '0x88dcaD01503edbCD0795D332F9C3744304a71a15', '0x075E3E705dcF565A59798bf584f1521623A9B24c', '0xA431402b0922C340B03D106424E30BFAB98C7498', '0x1020597BDe62961Dd0a7ee2833F64A5dfB265d77', '0x67285Cd4efCC6AADE37901602e4f0aD97363923E', '0x9ca5FF1dA81f58e3BBEf308027489A76Ce51A3d8', '0x4fa268ff1EE3F33fcd14504E4e6377989341b7e2', '0x2F298e77bA4Fd4c0B6878938F6b4071927954086', '0xdA9dc0bA2A66612391474D3A3DE5D59Dc08599Ba', '0x7452faFF02a9678061220445Ad59c9E869baf2A9', '0x0A76bbAf2b43a45bdaf92aBD2A32902B8e0b21b7', '0x6fBfbF0327a62Dd23ba74FE0046B033a7a5A24BC', '0x6590324dB19418308694855661D3ACfb60F40a4D', '0x0ce476B12F4c31aD9702F7ca4b09fE08D8f7d434', '0x1090438FcaF18F8d632b2cEC525e8D22aCF8C10c', '0x55607bcd2D6ac823516D8b4f301774Cb2327862c', '0xD26C59651B5ED6F83673e9c14b86910A81A3ac23', '0x5075F3b632EB8E16C4b14d04817701B7722eF786', '0x0c442623B6B99C967d897077EA500E9aCddc8ab9', '0xd35698a341C1F0862F65Bb0E00DFF0a592F5f728', '0x38778294cBD007d820239FEC1A3Db2460cd7e93d', '0xd8148089D92E5579D5aD38Cf194f449893BA28C9', '0xE03F1c1dAEFc1790F2fAC0416796A2fC2347998A', '0x8F88eaD29315353821fF11e7fc2fe81015cce379', '0xA3e2A974a9C64BA00A6baA7A30aAB6ebc6B79361', '0x4F7934A9576a78213f821708298FBE51beDfb9DB', '0x2E04d55029c180426c460D05A5c7573C66d9Bad0', '0xFF50CD21eDa03f05B73a9949EBd197B6Ab85f3b3', '0xD836f3778BAf489f78cc0efdd4E464505668A5c8', '0x4ddDEbc226A97dE103Bb86C6E2B396521C194a7f', '0x22E3cD8dDE0506Cd61876A86b77c90d444E7317D', '0x36dbe5F3468eDb34C5a6bA5179D7A0fec960E8E7', '0x41d83f790E9703B8fe43D9434aEc2cA259df18fF', '0x3f5dd3bcAC59A4376c70F75B967438A3ee71276a', '0x9f96eD62205F88ebB352cdF46306b3d720C8eC0F', '0xCb884A23577B6fe4193a8775F1D0131aaC5c30d3', '0xcbd554C7445B517fe21D4134b0104013926D28bc', '0xaF41ECF2b33812D98Dd95BCbd535a96DB7f3f34C', '0x6F9B17c65D2d258d1aB23Cd6cd757e07d6868AA5', '0x9bF4e31c70fa180ea4D657EDc3cd1ae70ba25570', '0xC70F38765D78fC2961B7DB5e3B23cded0d67D226', '0xC8136588f0C73f595383F86d0BfF1623253e0dd4', '0x505e691775C182Ec9F43E7E73A682be1ADA2da1e', '0x5CD3D358426843abADDD6b0848De97b6C48a0801', '0xbEfF8217477165E49eb3cf5A6D72556E960A2B7F', '0x02bc8D7Df6dC0c3c34C9ECCb19cACC1a80BE9683', '0xBdc2F13A3D4c1852568Fe95dA71A88a7253EDA51', '0xfBE6006A193560150F63902B7C8B69fa8739Bc95', '0x433021eD1FCb241F3B0C5FD76e58c05ebB4F87EA', '0x6B01259Eaea929717460eB1d20981288cc2a6f3E', '0xDe2eD29B1eAE81C221B9fb4c72378e1dBE6Cf53E', '0x599571b36849Ec01ae6a6401288f2F75bD6b996a', '0xB3C2c1141a8a885fA2404EC19aFA1cf86d4bcb11', '0x612609D8D6FfC905662Ee23093B848E463165d58', '0x9557144de0EdaCD8b409Ca3b26965FF281129c1a', '0xE03E36F8687C5Ce98682c84E5aDAC6d37487Ddd3', '0xCb44f8e81b8FF932d91b74D5E2681187d5D19f81', '0x3cf2dde4b15AF46aa18864Ce94725f9019283576', '0x20f7F9b7C1AEF55106b9c4cF66fB316346B73B41', '0x963aC03412F826a65a3Bb6403093a7143F1D7784', '0x0Ff75354B403bEaee5122a9bCa41E82d1aFB5171', '0xc64797e6caB5C08B68Bcd118e3A22761e582E241', '0x146486480292552bCa70468Fb8059653C9C5AFFa', '0xb7846A827E60756dAa7aef93De4E7D3926B35F04', '0x7D5140eF8ee09bc79F110d0b3e33FE66b337A30f', '0xB2069a5506b15B98284d2f249716d38FC5B9bbbD', '0x2Fa386c1D8F81Ba2AE10018F263708Cd4e280640', '0xf50Fee3A8196e49bfb6501e86411936EcB03E952', '0x64BED09E2a35711d1635CeDFB4330948cF36d851', '0xfad76c60986Ab7aC67c6a2cBab59f0049C1D1fEC', '0x408C554D45e79cBfE1d671Ca6c3ea3a8FFE49B34', '0x40CBD23A880fC32c607291BeC687697CaABD8803', '0x7A81f640e2e05B56042b200fc6F560deb4fEF64C', '0x42cc45EB4eeF3ae9CD11341679DD3b75BfbbfBf5', '0x1C2F4e6f6ea7aeE8B11B5F46589e958f51647C07', '0xc1D68EeDF8219c793171B988145963f9229808c5', '0xB9b40a1963720C0fc0a73aA279A04E0E940Eb6ff', '0x695423a61a581a1cc252796ac04dbd737E494278', '0x961e3d246748d00dcfC0894783bC0C161861C22B', '0xa39499489936C0b0aad84eEf76DbDB79Dd863bba', '0x673b1e8cD62C67989972C6bf2bD176738E1E8c5E', '0x05dcB5369d059be49148197C6A96d0A8eF0993E5', '0x42F804D69299CFA0B43540FfD09cFc78987dF2C2', '0x91c72462aE95f15836D43143900A90A509D77DFb', '0xe1e8e59Eb62e7785D0570F57112cE7731dd2f365', '0xF123d384879948D5CC1189A69cA9f175260cE174', '0x8d95E1460B81527b41773B6C4B2f9d506AD98880', '0x9B0654f3fE423C286E48C82E0997f4eb08D89ED5', '0x14C046560024c5b6AF1Ca1936BF2a4B766B6f16c', '0x239374fE72E1322aD44007A24C4217fab1FA39E0', '0x746efa363E67cb64E07B2B2E27C0ee719C1e894f', '0x8D618e25F34a17da3809C6222f5CAFF1410129A5', '0x4dc51C8b39155Bcfe4605a0fa98dD9012A9c09bB', '0x8B883C6d8d675d833Ec74F226f34a608320D971a', '0x6c271DB083ea8835fA701CDB860f77B387412fEf', '0x73339C955c96bdfa1C2C9b9ca3d95429875Dd569', '0x0c5D1220b0dFaEd89707E11328d29b3202FfcD5e', '0x95D04983ea58ded31d8AbfB823B5eaE864681bF7', '0x9D06DCCb9f5D1C79Dce56003549815DC1F3cDAc2', '0x1358a617CB1aa22513adB315dc33E58c8c046B93', '0x6aA45342916483d3f015d363B6151f25dF735dD1', '0x010a041197306B8aE721C2af4a51c4DdB3874208', '0x413Cb059a15f1De3FC236E432149918E46F4e6ed', '0x433483e8BBcd31703bfbb265a587588177268cAb', '0xA07Ea05eF32af75Ee21AC6EB5593CDfDD41f056d', '0x022733ecC4FD9FE2b5525eBf3123BC4Ee9D1A80D', '0xBa84AF7Ab49b2Ec1d650210c702fa8C13D189f2F', '0x0Fd49353909F6c4F9B1A8cf07dE490C51998707B', '0x524d63FB924D0d7BbEB93b50a73d548bf388F04B', '0x671b7035a8a7c4072f14bD2C3060695d6b033484', '0xD73E9Ba2d2806807C5bb82D9B0D73462c70718d8', '0xca46CBa50ac1c478Cc80eb478D5B360133162B9c', '0x00ea890138fC0a6B06aF15b420353c3d12841dF7', '0x384589bD1D9C8240642dEEE0A424c2f4eEC970cB', '0x06cADC487479d39082d91e5FDc4D79a534fd960f', '0xFa265a98732Ad5267a1D9DB8da434aaBc4BA18c0', '0x104fcdbd268EB4091889d89E026be21e4b38868d', '0x1D4c05EB659Fe28FF58ffe6CA672ACb6c55E86D2', '0xCdC9Ee92c4DBe054b84ffea9757d47dc8A00E5f9', '0xA8e770D5976A2E54F9D5c3A16c41a1aACa0244D6', '0x74846a0745d0BbFE97f93d6091B5d09763bE70B9', '0x20f634dB547e9E64802F53E95565a82C0D26B031', '0x9701cA00E025864909073e032B37c77DEa8C5B05', '0xFB0059FBC2c900a7cba2bB0F5eF9a131E28b5604', '0x983268d0047121Af20a054Cdf91808fCc79D2396', '0x28608Fe38BAce2Ccbc7CD00D7188eB2fcf46720C', '0xE146DFE9ca701d75FFFE47cA15249964396C36a8', '0xd490E7875316AE67C74882AD69f0c386e0b4866f', '0x8c62482f04E5c4880ada47b0aaE7DB1f41A075f6', '0x09d6679f6913b32Ccf0CD3803e688a3a496452D7', '0xD9052b142CEa223d913b6b786AA707C4E6C195dC', '0x810EcAc7a0f31dD0f32d68748a7242b1551E2496', '0x716B0761B02db102f72950544411e1bC80bbeb09', '0x48F77371F02b50c509F3684A660f6702F53d6Fc5', '0x0EBD29ccFdEEf2B09730aDC291f9A64b78dfeAEa', '0x08f4282058C075e54eB71152D9eF2E8E3e963CEF', '0xc56f63451E6e123cEB5DA1019A07d53f194f5B48', '0x9C9E22B6d527a68279f8BdA25FdE4536341C3B8F', '0x67c222D79349f4F1bE073b290ef4d486861da091', '0x71639c22bd39378b762309623590aa6fF1373c43', '0xc6E88807c6A4A9c8EDb15bFD4AdF0A6F3B1Fc90B', '0x83ebE573bFb90BBA32b474C3335Ca605b09A0bDD', '0x2d55453641fC19731b0b2f62C02906B9cc5c26b8', '0x2Dbdce62Ef743c196E667B0ABAE988887c805Fc8']
const amounts = [60, 20, 10, 350, 10, 30, 50, 40, 60, 60, 50, 10, 20, 60, 10, 60, 10, 60, 30, 30, 30, 70, 60, 30, 110, 1930, 40, 110, 20, 30, 40, 40, 30, 90, 20, 70, 120, 30, 20, 20, 10, 10, 40, 10, 30, 30, 40, 20, 30, 10, 30, 10, 30, 40, 20, 30, 20, 330, 20, 60, 40, 60, 30, 320, 220, 70, 30, 30, 20, 60, 60, 30, 30, 10, 60, 70, 30, 30, 30, 30, 60, 30, 30, 10, 40, 30, 120, 30, 60, 200, 10, 60, 30, 30, 0, 1100, 10, 470, 10, 30, 120, 110, 60, 40, 90, 0, 10, 10, 30, 90, 20, 10, 10, 30, 1020, 30, 10, 30, 140, 80, 30, 30, 30, 10, 40, 10, 60, 30, 0, 30, 30, 20, 40, 210, 30, 60, 10, 30, 20, 20, 10, 40, 90, 10, 60, 90, 10, 50, 70, 40, 100, 120, 60, 40, 10, 30, 30, 90, 40, 1020, 30, 120, 0, 170, 30, 30, 20, 30, 290, 40, 30, 1530, 30, 110, 150, 30, 1400, 40, 30, 50, 70, 30, 40, 10, 30, 30, 10, 40, 50, 30, 10, 120, 30, 30, 80, 50, 30, 50, 30, 30]
// added the addresses into WhiteList
// const addresses = ['0xF9c06651449ce455Fd588E64Ac4Ee86C473946dE', '0xAa6012a16Ec0BD6438aa03C0249891494715eFbd', '0x6bfcb9202058314b967f377a22CaAb03920eEbF0', '0x353e98116a4FcA6b58902Cb583E560d2a024431D']
// const amounts = [1, 20, 30, 60]

async function check() {
    const chainId = await getChainId()
    const vipPresale = contracts.vipPresale[chainId];

    const rpc = new ethers.providers.JsonRpcProvider(env.rpcURL);
    const admin = new ethers.Wallet(process.env.PRIVATE_KEY, rpc);

    const IVipPresale = await ethers.getContractFactory('VipPresale')
    const VipPresale = IVipPresale.attach(vipPresale).connect(admin);
    console.log(`Checking WhiteList`)

    const len = addresses.length;
    
    for (let i = 0; i < len; i++) {
        const txx = await VipPresale.whitelist(addresses[i])
        console.log(`index:${i} ${txx} `)
    }
    
    console.log(`All checked`)
    console.log(`\n`)
}

async function getPurchasedList() {
    const chainId = await getChainId()
    const vipPresale = contracts.vipPresale[chainId];

    const rpc = new ethers.providers.JsonRpcProvider(env.rpcURL);
    const admin = new ethers.Wallet(process.env.PRIVATE_KEY, rpc);

    const IVipPresale = await ethers.getContractFactory('VipPresale')
    const VipPresale = IVipPresale.attach(vipPresale).connect(admin);
    console.log(`Getting Purchased list`)

    const len = addresses.length;
    
    for (let i = 0; i < len; i++) {
        const purchasedAmount = ((await VipPresale.users(addresses[i])).purchased).toString()
        console.log(`index:${i} ${addresses[i]} ${purchasedAmount}`)
    }
    
    console.log(`Done!`)
    console.log(`\n`)
}

async function main() {
    const chainId = await getChainId()
    const vipPresale = contracts.vipPresale[chainId];

    const rpc = new ethers.providers.JsonRpcProvider(env.rpcURL);
    const admin = new ethers.Wallet(process.env.PRIVATE_KEY, rpc);

    const IVipPresale = await ethers.getContractFactory('VipPresale')
    const VipPresale = IVipPresale.attach(vipPresale).connect(admin);
    console.log(`Add WhiteList...`)
    const len = addresses.length;
    
    for (let i = 0; i < len; i += 20) {
        console.log(`from:${i}  to:${Math.min(i + 20, len) - 1} doing...`)
        console.log(`address i    == ${addresses[i]}`)
        console.log(`address i+19 == ${addresses[Math.min(i+19, len)]}`) 
        const txx = await VipPresale.whitelistAdd(
            addresses.slice(i, Math.min(i + 20, len))
            , amounts.slice(i, Math.min(i + 20, len)))
        await txx.wait()
        console.log(`done`)
    }
    console.log(`All Completed`)
    console.log(`\n`)
}

getPurchasedList()
    .then(() => process.exit(0))
    .catch((error) => {
        console.log(error);
        process.exit(1);
    });
